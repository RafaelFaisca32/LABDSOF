name: Application CI
on: [push, pull_request, workflow_dispatch]
jobs:
  pipeline:
    name: NetQuest general pipeline
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
    timeout-minutes: 40
    env:
      NODE_VERSION: 20.12.2
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
      SPRING_JPA_SHOW_SQL: false
      JHI_DISABLE_WEBPACK_LOGS: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.12.2
      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 21
      - name: Install Node.js packages
        working-directory: ./netquest-frontend
        run: npm install
      - name: Install Maven dependencies
        working-directory: ./netquest-backend
        run: |
          chmod +x mvnw
          ./mvnw clean install
      - name: Run backend test
        working-directory: ./netquest-backend
        run: |
          chmod +x mvnw
          ./mvnw test
      - name: Run frontend test
        working-directory: ./netquest-frontend
        run: npm run test -- --coverage --watchAll=false
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=RafaelFaisca32_LABDSOF
            -Dsonar.organization=rafaelfaisca32
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # Separate job for steps that should only run on the master branch
  docker_deployment:
    name: Docker and Render Deployment
    runs-on: ubuntu-latest
    needs: pipeline
    if: github.ref_name == 'main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.12.2
      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 21
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_HUB_REPO }}:dev .
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_REPO }}:dev
      - name: Webhook for render deployment
        uses: distributhor/workflow-webhook@v3
        with:
          webhook_url: ${{ secrets.RENDER_WEBHOOK }}
