@startuml Domain Model

' Define colors and styles for elements
skinparam Class {
    BackgroundColor #F0F0F0
    BorderColor #333333
    ArrowColor #336699
    FontColor #333333
    FontSize 12
    FontStyle Bold
    Shadowing true
}

' Style for relationships
skinparam linetype ortho
skinparam arrowThickness 2
skinparam arrowColor #336699
skinparam linetype ortho

' Header/footer with additional info
header "Domain Model"
footer "Generated with PlantUML on %date%"

<style>

    frame {
        .user {
            BackgroundColor #FFFAF0       
            BorderColor #CC5500           
            FontColor #CC5500 
        }

        .wifispot {
            BackgroundColor #E6FFE6 
            BorderColor #008000
            FontColor #008000
        }

        .review {
            BackgroundColor #F0F8FF       
            BorderColor #4682B4          
            FontColor #4682B4             
        }

        .wifispotvisit {
            BackgroundColor #E0FFFF
            BorderColor #4682B4
            FontColor #4682B4               
        }

        .offer {
            BackgroundColor #FFE4E1
            BorderColor #FF4500           
            FontColor #FF4500
        }

        .pointstransaction {
            BackgroundColor #FFFACD
            BorderColor #DAA520
            FontColor #DAA520
        }

        .offerRedeemed {
            BackgroundColor: #E6E6FA
            BorderColor: #8A2BE2
            FontColor: #8A2BE2
        }


    }

</style>


frame "User Aggregate" <<user>> {

    ' User AggregateRoot
    class User <<AggregateRoot>> {

    } 

    Class UserId <<ValueObject>>{
        value: UUIDv4
    }

    Class UserFirstName <<ValueObject>>{
        value: string
    }

    Class UserLastName <<ValueObject>>{
        value: string
    }

    Class UserGender <<ValueObject>>{
        value: Gender
    }

    Class UserName <<ValueObject>>{
        value: string
    }

    Class UserEmail <<ValueObject>>{
        value: string
    }

    Class UserPassword <<ValueObject>>{
        value: string
    }

    Class UserBirthDate <<ValueObject>>{
        value: date
    }

    Class UserRole <<ValueObject>> {
        value: Role
    }

    'Entity UserAddress
    Class UserAddress <<Entity>>{

    }

    Class UserAddressLine1 <<ValueObject>>{
        value: string
    }

    Class UserAddressLine2 <<ValueObject>>{
        value: string
    }

    Class UserAddressCity <<ValueObject>>{
        value: string
    }

    Class UserAddressDistrict <<ValueObject>>{
        value: string
    }

    Class UserAddressCountry <<ValueObject>>{
        value: string
    }

    Class UserAddressZipCode <<ValueObject>>{
        value: string
    }

    Enum Role {
        ADMIN
        OFFER_MANAGER
        USER
        USER_PREMIUM
    }

    Enum Gender {
        MALE
        FEMALE
        OTHER
    }


    'User Entity Relationships w/ VOs
    User -- UserId
    User -- UserFirstName
    User -- UserLastName
    User -- UserGender
    User -- UserName
    User -- UserEmail
    User -- UserPassword
    User -- UserBirthDate
    User "1"-->"1..*" UserRole 

    'User Address Entity Relationships w/ VOs
    UserAddress -- UserAddressLine1
    UserAddress -- UserAddressLine2
    UserAddress -- UserAddressCity
    UserAddress -- UserAddressDistrict
    UserAddress -- UserAddressCountry
    UserAddress -- UserAddressZipCode


    'User Entity Relationships w/ Entities
    User "1"-->"1" UserAddress : lives/is placed

}



frame "Wifi Spot Aggregate" <<wifispot>> {

    Class WifiSpot <<AggregateRoot>> {
        
    }

    Class WifiSpotId <<ValueObject>> {
        value: UUIDv4
    }

    Class WifiSpotCoordinates <<ValueObject>> {
        latitude: double
        longitude: double
    }

    Class WifiSpotLocationType <<ValueObject>> {
        value: LocationType
    }

    Class WifiSpotQualityIndicators <<ValueObject>> {
        wifiQuality: QualityType
        sinalStrength: StrengthType
        bandwithLimitations: BandwithType
        peakUsageHourInterval: time[2]
    }

    Class WifiSpotEnvironmentalFeatures <<ValueObject>> {
        crowded: bool
        coveredArea: bool
        airConditioning: bool
        outdoorSeating: bool
        goodView: bool
        noiseLevel: NoiseType
        petFriendly: bool
        childFriendly: bool
        disabledAccess: bool
    }

    Class WifiSpotFacilities <<ValueObject>> {
        availablePowerOutlets: bool
        chargingStations: bool
        restroomsAvailable: bool
        parkingAvailability: bool
        foodOptions: bool
        drinkOptions: bool
    }

    Class WifiSpotWeatherFeatures <<ValueObject>>{
        openDuringRain: bool
        openDuringHear: bool
        heatedInWinter: bool
        shadedAreas: bool
        outdoorFans: bool
    }

    'Entity WifiSpotAddress
    Class WifiSpotAddress <<Entity>>{

    }

    Class WifiSpotAddressLine1 <<ValueObject>>{
        value: string
    }

    Class WifiSpotAddressLine2 <<ValueObject>>{
        value: string
    }

    Class WifiSpotAddressCity <<ValueObject>>{
        value: string
    }

    Class WifiSpotAddressDistrict <<ValueObject>>{
        value: string
    }

    Class WifiSpotAddressCountry <<ValueObject>>{
        value: string
    }

    Class WifiSpotAddressZipCode <<ValueObject>>{
        value: string
    }

    Class WifiSpotManagement <<ValueObject>> {
        value: WifiSpotManagementType
    }
    
    

    'WifiSpot Entity Relationships w/ VOs
    WifiSpot -- WifiSpotId
    WifiSpot -- WifiSpotCoordinates
    WifiSpot -- WifiSpotVerified
    WifiSpot -- WifiSpotLocationType
    WifiSpot -- WifiSpotQualityIndicators
    WifiSpot -- WifiSpotEnvironmentalFeatures
    WifiSpot -- WifiSpotFacilities
    WifiSpot -- WifiSpotWeatherFeatures
    WifiSpot -- WifiSpotPartner
    WifiSpot "1" --> "1..*" WifiSpotManagement

    

    'WifiSpotAddress Entity Relationships w/ VOs
    WifiSpotAddress -- WifiSpotAddressLine1
    WifiSpotAddress -- WifiSpotAddressLine2
    WifiSpotAddress -- WifiSpotAddressCity
    WifiSpotAddress -- WifiSpotAddressDistrict
    WifiSpotAddress -- WifiSpotAddressCountry
    WifiSpotAddress -- WifiSpotAddressZipCode
    

    'WifiSpot Entity Relationships w/ Entities
    WifiSpot "1" --> "1" WifiSpotAddress : is located
    WifiSpot "1" --> "1" User : is submitted by
    WifiSpot "1" --> "0..*" User : is owned/managed by (when verified)


    
    
    'ENUMS 
    Enum LocationType {
        PUBLIC
        CAFE
        LIBRARY
        PARK
        SCHOOL
        RESTAURANT
        OTHERS
    }

    Enum QualityType {
        HIGH
        MEDIUM
        LOW
    }

    Enum BandwithType {
        LIMITED
        UNLIMITED
    }

    Enum StrengthType {
        STRONG
        MEDIUM
        LOW
    }

    Enum NoiseType {
        NONE
        QUIET
        MODERATE
        LOUD
    }

    Enum WifiSpotManagementType {
        SPONSOR
        VERIFIED
        UNVERIFIED
    }

}


frame "Review Aggregate" <<review>> {

    'Entity Review
    Class Review <<AggregateRoot>>{

    }

    Class ReviewId <<ValueObject>>{
        value: UUIDv4
    }

    Class ReviewOverallClassification <<ValueObject>> {
        value: int
    }

    Class ReviewComment <<ValueObject>> {
        value: string
    }

    'Can be anything, qualitative/quantitative EX:
    'Internet Speed: fast
    'Internet Speed: 500mbps
    'Sofas: comfy
    Class ReviewAttributeClassification <<ValueObject>> {
        name: string
        value: string
    }


    'Review Entity Relationships w/ VOs
    Review -- ReviewId
    Review -- ReviewOverallClassification
    Review "1" --> "*" ReviewAttributeClassification
    Review -- ReviewComment

    'Review Entity Relationships w/ Entities
    Review "1" --> "1" WifiSpot
    Review "1" --> "1" User : is created by


}


frame "Offer Aggregate" <<offer>>{

    Class Offer <<AggregateRoot>>{

    }

    Class OfferId <<ValueObject>> {
        value: UUIDv4
    }

    class OfferCost <<ValueObject>> {
        value: int
    }

    Class OfferDescription <<ValueObject>> {
        value: string
    }

    Class OfferImage <<ValueObject>> {
        value: blob
    }

    Class OfferExpirationDate <<ValueObject>> {
        value: datetime
    }

    Class OfferActive <<ValueObject>> {
        value: bool
    }

    'Offer Entity Relationships w/ VOs
    Offer -- OfferId
    Offer -- OfferCost
    Offer -- OfferDescription
    Offer -- OfferImage
    Offer -- OfferExpirationDate
    Offer -- OfferActive

    'Offer Entity Relationships w/ Entities
    Offer "1" --> "1" User : added by [ADMIN, PARTNER, OFFER_MANAGER] user
    Offer "1" --> "0..1" WifiSpot : available on

}

frame "Offer Redeem Aggregate" <<offerRedeemed>> {
    Class OfferRedeem <<AggregateRoot>>{

    }

    Class OfferRedeemId <<ValueObject>> {
        value: UUIDv4
    }

    Class OfferRedeemCode <<ValueObject>>{
        value: string
    }

    Class OfferRedeemDate <<ValueObject>> {
        value: datetime
    }

    Class OfferRedeemUsedDate <<ValueObject>> {
        value: datetime
    }

    'OfferRedeem Entity Relationships w/ VOs
    OfferRedeem -- OfferRedeemId
    OfferRedeem -- OfferRedeemCode
    OfferRedeem -- OfferRedeemDate
    OfferRedeem -- OfferRedeemUsedDate

    'Offer Redeem Entity Relationship w/ Entities
    OfferRedeem "1" -> "1" Offer
    OfferRedeem "1" -> "1" User
}



frame "Wifi Spot Visit Aggregate" <<wifispotvisit>> {
    Class WifiSpotVisit <<AggregateRoot>> {

    }

    Class WifiSpotVisitId <<ValueObject>> {
        value: UUIDv4
    }

    Class WifiSpotVisitBeginDateTime <<ValueObject>> {
        value: datetime
    }

    Class WifiSpotVisitEndDateTime <<ValueObject>> {
        value: datetime
    }



    'WifiSpotVisit Relationships w/ VOs
    WifiSpotVisit -- WifiSpotVisitId
    WifiSpotVisit -- WifiSpotVisitBeginDateTime
    WifiSpotVisit -- WifiSpotVisitEndDateTime

    'WifiSpot Relationships w/ Entities
    WifiSpotVisit "1" --> "1" User : is done by
    WifiSpotVisit "1" --> "1" WifiSpot : a visit is in a spot
    

}

frame "Points Transaction Aggregate" <<pointstransaction>> {

    Class PointsTransaction <<AggregateRoot>> {

    }

    Class PointsTransactionDate <<ValueObject>> {
        value: datetime
    }

    Class PointsTransactionId <<ValueObject>> {
        value: UUIDv4
    }

    Class PointsEarnTransaction <<Entity>> {

    }

    Class PointsEarnTransactionAmount <<ValueObject>> {
        value: int
    }

    Class PointsWasteTransaction <<Entity>>{

    }

    Class PointsWasteTransactionAmount <<ValueObject>> {
        value: int
    }

    

    'PointsTransaction Relationships w/ VOs
    PointsTransaction -- PointsTransactionDate
    PointsTransaction -- PointsTransactionId

    'PointsTransaction Relationships w/ Entities
    PointsTransaction "*" <-- "1" User : a user makes

    'PointsEarnTransaction Relationships w/ VOs
    PointsEarnTransaction -- PointsEarnTransactionAmount

    'PointsEarnTransaction Relationships w/ Entities
    PointsEarnTransaction --o PointsTransaction
    PointsEarnTransaction "1" --> "0..1" Review : points are earned by leaving a review
    PointsEarnTransaction "1" --> "0..1" WifiSpot : points are earned by creating a wifi spot
    PointsEarnTransaction "1" --> "0..1" WifiSpotVisit : points are earned by visiting a wifi spot

    'PointsWasteTransaction Relationships w/ VOs
    PointsWasteTransaction -- PointsWasteTransactionAmount


    'PointsWasteTransaction Relationships w/ Entities
    PointsWasteTransaction --o PointsTransaction
    PointsWasteTransaction "1" --> "1" Offer : points are wasted by buying offers
    
}


@enduml
